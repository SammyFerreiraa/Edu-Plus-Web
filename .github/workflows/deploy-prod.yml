name: Deploy Prod

on:
   pull_request:
      branches:
         - main
      types:
         - closed

env:
   VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
   VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
   VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
   deploy-prod:
      if: github.event.pull_request.merged == true
      runs-on: ubuntu-latest

      steps:
         - name: Checkout code
           uses: actions/checkout@v4

         - name: Setup Node.js
           uses: actions/setup-node@v4
           with:
              node-version: "20"

         - name: Enable corepack and activate pnpm 10.6.5
           run: |
              corepack enable
              corepack prepare pnpm@10.6.5 --activate

         - name: Setup pnpm cache
           uses: actions/setup-node@v4
           with:
              node-version: "20"
              cache: "pnpm"
              cache-dependency-path: pnpm-lock.yaml

         - name: Install dependencies
           run: pnpm install --frozen-lockfile

         - name: Create .env file
           run: |
              echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
              echo "AUTH_SECRET=${{ secrets.AUTH_SECRET }}" >> .env
              echo "NODE_ENV=production" >> .env
              echo "AWS_CLOUDWATCH_REGION=${{ secrets.AWS_CLOUDWATCH_REGION }}" >> .env
              echo "AWS_CLOUDWATCH_ACCESS_KEY_ID=${{ secrets.AWS_CLOUDWATCH_ACCESS_KEY_ID }}" >> .env
              echo "AWS_CLOUDWATCH_SECRET_ACCESS_KEY=${{ secrets.AWS_CLOUDWATCH_SECRET_ACCESS_KEY }}" >> .env
              echo "AWS_CLOUDWATCH_LOG_GROUP_NAME=${{ secrets.AWS_CLOUDWATCH_LOG_GROUP_NAME }}" >> .env

         - name: Migrate database
           run: pnpm prisma migrate deploy

         - name: Install Vercel CLI
           run: pnpm install vercel@latest

         - name: Pull Vercel environment
           run: pnpm vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

         - name: Build with Vercel CLI
           run: pnpm vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

         - name: Deploy to Production
           run: pnpm vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

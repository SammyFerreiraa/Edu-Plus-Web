// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

generator drizzle {
    provider = "drizzle-prisma-generator"
    output   = "./drizzle"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum UserRole {
    ADMIN
    MANAGER
    MEMBER
}

model User {
    id            String    @id @default(uuid())
    name          String?
    email         String    @unique
    emailVerified DateTime?
    image         String?
    role          UserRole
    accounts      Account[]
    sessions      Session[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Post             Post[]
    Comment          Comment[]
    verificationCode verificationCode[]
}

model Account {
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@id([provider, providerAccountId])
}

model Session {
    sessionToken String   @unique
    userId       String
    userAgent    String?
    expires      DateTime
    ipAddress    String? // IP address do login

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([userId])
    @@index([ipAddress])
}

model verificationCode {
    id        String   @id @default(uuid())
    createdAt DateTime @default(now())
    expiresAt DateTime
    used      Boolean  @default(false)
    code      String

    userId String
    user   User   @relation(fields: [userId], references: [id])

    @@index([userId])
}
